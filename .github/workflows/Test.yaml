name: Test project

on:
  workflow_dispatch: {}

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2022.3.7f1
        # projectPath:
        # - GameCI/GameCI
        testMode:
          - playmode
          - editmode
          - standalone
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - name: Get all file list with ls cmd
        run: ls -al
      # - name: Print project path
      #   run: |
      #     echo ${{ matrix.projectPath }}
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-test
      - uses: game-ci/unity-test-runner@v3
        id: tests
        env:
          UNITY_LICENSE: ${{ env.UNITY_LICENSE }}
        with:
          # projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: "generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*"
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}
